/**
* Api Documentation
* Api Documentation
*
* OpenAPI spec version: 1.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package com.kodfarki.subscreasy.client


import io.swagger.client.infrastructure.*

class EndpointsNoAuthApi(basePath: kotlin.String = "https://app.subscreasy.com") : ApiClient(basePath) {

    /**
    * startSubscription3ds
    * 
    * @param offer.recurrence.id  (optional)
    * @param offer.recurrence.recurrenceType  (optional)
    * @param offer.recurrence.length  (optional)
    * @param offer.company.address.id  (optional)
    * @param offer.company.address.name  (optional)
    * @param offer.company.address.streetAddress  (optional)
    * @param offer.company.address.postalCode  (optional)
    * @param offer.company.address.city  (optional)
    * @param offer.company.address.stateProvince  (optional)
    * @param offer.company.address.country  (optional)
    * @param offer.company.address.companyId  (optional)
    * @param offer.company.companyProps.id  (optional)
    * @param offer.company.companyProps.callbackUrl  (optional)
    * @param offer.company.companyProps.logoPath  (optional)
    * @param offer.company.companyProps.hostedPageCSSPath  (optional)
    * @param offer.company.companyProps.privacyPolicyUrl  (optional)
    * @param offer.company.companyProps.subscreasyApiKey  (optional)
    * @param offer.company.companyProps.subscreasySecureKey  (optional)
    * @param offer.company.companyProps.paymentGateway  (optional)
    * @param offer.company.companyProps.mobilePaymentGateway  (optional)
    * @param offer.company.companyProps.wirecardUserCode  (optional)
    * @param offer.company.companyProps.wirecardPin  (optional)
    * @param offer.company.companyProps.wirecardTurkcellServisId  (optional)
    * @param offer.company.companyProps.wirecardSuccessfulMessage  (optional)
    * @param offer.company.companyProps.wirecardErrorMessage  (optional)
    * @param offer.company.companyProps.paymentGatewayApiKey  (optional)
    * @param offer.company.companyProps.paymentGatewaySecurityKey  (optional)
    * @param offer.company.companyProps.payuMerchantKeyRenewals  (optional)
    * @param offer.company.companyProps.payuSecretKeyRenewals  (optional)
    * @param offer.company.companyProps.paytrMerchantId  (optional)
    * @param offer.company.companyProps.mobilExpressMerchantKey  (optional)
    * @param offer.company.companyProps.mobilExpressApiPassword  (optional)
    * @param offer.company.companyProps.mobilExpressPosid  (optional)
    * @param offer.company.companyProps.billingDate  (optional)
    * @param offer.company.companyProps.billingThresholdDays  (optional)
    * @param offer.company.companyProps.domainName  (optional)
    * @param offer.company.companyProps.contactEmail  (optional)
    * @param offer.company.companyProps.sendDailyReports  (optional)
    * @param offer.company.companyProps.notifyNewSubscription  (optional)
    * @param offer.company.companyProps.notifyRenewal  (optional)
    * @param offer.company.companyProps.notifySubscriptionCancellation  (optional)
    * @param offer.company.companyProps.branding  (optional)
    * @param offer.company.companyProps.billingInformationMandatory  (optional)
    * @param offer.company.id  (optional)
    * @param offer.company.name  (optional)
    * @param offer.company.siteName  (optional)
    * @param offer.id  (optional)
    * @param offer.secureId  (optional)
    * @param offer.name  (optional)
    * @param offer.description  (optional)
    * @param offer.price  (optional)
    * @param offer.currency  (optional)
    * @param offer.multiplePurchase  (optional)
    * @param offer.recurrenceCount  (optional)
    * @param offer.trialPeriod  (optional)
    * @param offer.productType  (optional)
    * @param offer.renewalType  (optional)
    * @param offer.disablePaymentForm  (optional)
    * @param offer.createDate  (optional)
    * @param offer.imagePath  (optional)
    * @param subscriber.billingAddress.id  (optional)
    * @param subscriber.billingAddress.name  (optional)
    * @param subscriber.billingAddress.streetAddress  (optional)
    * @param subscriber.billingAddress.postalCode  (optional)
    * @param subscriber.billingAddress.city  (optional)
    * @param subscriber.billingAddress.stateProvince  (optional)
    * @param subscriber.billingAddress.country  (optional)
    * @param subscriber.billingAddress.companyId  (optional)
    * @param subscriber.shippingAddress.id  (optional)
    * @param subscriber.shippingAddress.name  (optional)
    * @param subscriber.shippingAddress.streetAddress  (optional)
    * @param subscriber.shippingAddress.postalCode  (optional)
    * @param subscriber.shippingAddress.city  (optional)
    * @param subscriber.shippingAddress.stateProvince  (optional)
    * @param subscriber.shippingAddress.country  (optional)
    * @param subscriber.shippingAddress.companyId  (optional)
    * @param subscriber.company.address.id  (optional)
    * @param subscriber.company.address.name  (optional)
    * @param subscriber.company.address.streetAddress  (optional)
    * @param subscriber.company.address.postalCode  (optional)
    * @param subscriber.company.address.city  (optional)
    * @param subscriber.company.address.stateProvince  (optional)
    * @param subscriber.company.address.country  (optional)
    * @param subscriber.company.address.companyId  (optional)
    * @param subscriber.company.companyProps.id  (optional)
    * @param subscriber.company.companyProps.callbackUrl  (optional)
    * @param subscriber.company.companyProps.logoPath  (optional)
    * @param subscriber.company.companyProps.hostedPageCSSPath  (optional)
    * @param subscriber.company.companyProps.privacyPolicyUrl  (optional)
    * @param subscriber.company.companyProps.subscreasyApiKey  (optional)
    * @param subscriber.company.companyProps.subscreasySecureKey  (optional)
    * @param subscriber.company.companyProps.paymentGateway  (optional)
    * @param subscriber.company.companyProps.mobilePaymentGateway  (optional)
    * @param subscriber.company.companyProps.wirecardUserCode  (optional)
    * @param subscriber.company.companyProps.wirecardPin  (optional)
    * @param subscriber.company.companyProps.wirecardTurkcellServisId  (optional)
    * @param subscriber.company.companyProps.wirecardSuccessfulMessage  (optional)
    * @param subscriber.company.companyProps.wirecardErrorMessage  (optional)
    * @param subscriber.company.companyProps.paymentGatewayApiKey  (optional)
    * @param subscriber.company.companyProps.paymentGatewaySecurityKey  (optional)
    * @param subscriber.company.companyProps.payuMerchantKeyRenewals  (optional)
    * @param subscriber.company.companyProps.payuSecretKeyRenewals  (optional)
    * @param subscriber.company.companyProps.paytrMerchantId  (optional)
    * @param subscriber.company.companyProps.mobilExpressMerchantKey  (optional)
    * @param subscriber.company.companyProps.mobilExpressApiPassword  (optional)
    * @param subscriber.company.companyProps.mobilExpressPosid  (optional)
    * @param subscriber.company.companyProps.billingDate  (optional)
    * @param subscriber.company.companyProps.billingThresholdDays  (optional)
    * @param subscriber.company.companyProps.domainName  (optional)
    * @param subscriber.company.companyProps.contactEmail  (optional)
    * @param subscriber.company.companyProps.sendDailyReports  (optional)
    * @param subscriber.company.companyProps.notifyNewSubscription  (optional)
    * @param subscriber.company.companyProps.notifyRenewal  (optional)
    * @param subscriber.company.companyProps.notifySubscriptionCancellation  (optional)
    * @param subscriber.company.companyProps.branding  (optional)
    * @param subscriber.company.companyProps.billingInformationMandatory  (optional)
    * @param subscriber.company.id  (optional)
    * @param subscriber.company.name  (optional)
    * @param subscriber.company.siteName  (optional)
    * @param subscriber.id  (optional)
    * @param subscriber.secureId  (optional)
    * @param subscriber.merchantSubscriberId  (optional)
    * @param subscriber.email  (optional)
    * @param subscriber.name  (optional)
    * @param subscriber.surname  (optional)
    * @param subscriber.phoneNumber  (optional)
    * @param subscriber.createDate  (optional)
    * @param subscriber.identificationNo  (optional)
    * @param subscriber.taxNumber  (optional)
    * @param subscriber.taxAdministration  (optional)
    * @param subscriber.worksFor  (optional)
    * @param paymentCard.cardHolderName  (optional)
    * @param paymentCard.cardNumber  (optional)
    * @param paymentCard.expireYear  (optional)
    * @param paymentCard.expireMonth  (optional)
    * @param paymentCard.cvc  (optional)
    * @param paymentCard.registerCard  (optional)
    * @param paymentCard.cardAlias  (optional)
    * @param paymentCard.cardToken  (optional)
    * @param paymentCard.cardUserKey  (optional)
    * @param paymentCard.cardFamily  (optional)
    * @param subscriberFromDb.billingAddress.id  (optional)
    * @param subscriberFromDb.billingAddress.name  (optional)
    * @param subscriberFromDb.billingAddress.streetAddress  (optional)
    * @param subscriberFromDb.billingAddress.postalCode  (optional)
    * @param subscriberFromDb.billingAddress.city  (optional)
    * @param subscriberFromDb.billingAddress.stateProvince  (optional)
    * @param subscriberFromDb.billingAddress.country  (optional)
    * @param subscriberFromDb.billingAddress.companyId  (optional)
    * @param subscriberFromDb.shippingAddress.id  (optional)
    * @param subscriberFromDb.shippingAddress.name  (optional)
    * @param subscriberFromDb.shippingAddress.streetAddress  (optional)
    * @param subscriberFromDb.shippingAddress.postalCode  (optional)
    * @param subscriberFromDb.shippingAddress.city  (optional)
    * @param subscriberFromDb.shippingAddress.stateProvince  (optional)
    * @param subscriberFromDb.shippingAddress.country  (optional)
    * @param subscriberFromDb.shippingAddress.companyId  (optional)
    * @param subscriberFromDb.company.address.id  (optional)
    * @param subscriberFromDb.company.address.name  (optional)
    * @param subscriberFromDb.company.address.streetAddress  (optional)
    * @param subscriberFromDb.company.address.postalCode  (optional)
    * @param subscriberFromDb.company.address.city  (optional)
    * @param subscriberFromDb.company.address.stateProvince  (optional)
    * @param subscriberFromDb.company.address.country  (optional)
    * @param subscriberFromDb.company.address.companyId  (optional)
    * @param subscriberFromDb.company.companyProps.id  (optional)
    * @param subscriberFromDb.company.companyProps.callbackUrl  (optional)
    * @param subscriberFromDb.company.companyProps.logoPath  (optional)
    * @param subscriberFromDb.company.companyProps.hostedPageCSSPath  (optional)
    * @param subscriberFromDb.company.companyProps.privacyPolicyUrl  (optional)
    * @param subscriberFromDb.company.companyProps.subscreasyApiKey  (optional)
    * @param subscriberFromDb.company.companyProps.subscreasySecureKey  (optional)
    * @param subscriberFromDb.company.companyProps.paymentGateway  (optional)
    * @param subscriberFromDb.company.companyProps.mobilePaymentGateway  (optional)
    * @param subscriberFromDb.company.companyProps.wirecardUserCode  (optional)
    * @param subscriberFromDb.company.companyProps.wirecardPin  (optional)
    * @param subscriberFromDb.company.companyProps.wirecardTurkcellServisId  (optional)
    * @param subscriberFromDb.company.companyProps.wirecardSuccessfulMessage  (optional)
    * @param subscriberFromDb.company.companyProps.wirecardErrorMessage  (optional)
    * @param subscriberFromDb.company.companyProps.paymentGatewayApiKey  (optional)
    * @param subscriberFromDb.company.companyProps.paymentGatewaySecurityKey  (optional)
    * @param subscriberFromDb.company.companyProps.payuMerchantKeyRenewals  (optional)
    * @param subscriberFromDb.company.companyProps.payuSecretKeyRenewals  (optional)
    * @param subscriberFromDb.company.companyProps.paytrMerchantId  (optional)
    * @param subscriberFromDb.company.companyProps.mobilExpressMerchantKey  (optional)
    * @param subscriberFromDb.company.companyProps.mobilExpressApiPassword  (optional)
    * @param subscriberFromDb.company.companyProps.mobilExpressPosid  (optional)
    * @param subscriberFromDb.company.companyProps.billingDate  (optional)
    * @param subscriberFromDb.company.companyProps.billingThresholdDays  (optional)
    * @param subscriberFromDb.company.companyProps.domainName  (optional)
    * @param subscriberFromDb.company.companyProps.contactEmail  (optional)
    * @param subscriberFromDb.company.companyProps.sendDailyReports  (optional)
    * @param subscriberFromDb.company.companyProps.notifyNewSubscription  (optional)
    * @param subscriberFromDb.company.companyProps.notifyRenewal  (optional)
    * @param subscriberFromDb.company.companyProps.notifySubscriptionCancellation  (optional)
    * @param subscriberFromDb.company.companyProps.branding  (optional)
    * @param subscriberFromDb.company.companyProps.billingInformationMandatory  (optional)
    * @param subscriberFromDb.company.id  (optional)
    * @param subscriberFromDb.company.name  (optional)
    * @param subscriberFromDb.company.siteName  (optional)
    * @param subscriberFromDb.id  (optional)
    * @param subscriberFromDb.secureId  (optional)
    * @param subscriberFromDb.merchantSubscriberId  (optional)
    * @param subscriberFromDb.email  (optional)
    * @param subscriberFromDb.name  (optional)
    * @param subscriberFromDb.surname  (optional)
    * @param subscriberFromDb.phoneNumber  (optional)
    * @param subscriberFromDb.createDate  (optional)
    * @param subscriberFromDb.identificationNo  (optional)
    * @param subscriberFromDb.taxNumber  (optional)
    * @param subscriberFromDb.taxAdministration  (optional)
    * @param subscriberFromDb.worksFor  (optional)
    * @param couponCode  (optional)
    * @param callbackUrl  (optional)
    * @param price  (optional)
    * @param companySiteName  (optional)
    * @param privacyPolicyUrl  (optional)
    * @param paymentType  (optional)
    * @param editable  (optional)
    * @param productType  (optional)
    * @return kotlin.String
    */
    @Suppress("UNCHECKED_CAST")
    fun startSubscription3dsUsingPOST(offer.recurrence.id: kotlin.Long, offer.recurrence.recurrenceType: kotlin.String, offer.recurrence.length: kotlin.Long, offer.company.address.id: kotlin.Long, offer.company.address.name: kotlin.String, offer.company.address.streetAddress: kotlin.String, offer.company.address.postalCode: kotlin.String, offer.company.address.city: kotlin.String, offer.company.address.stateProvince: kotlin.String, offer.company.address.country: kotlin.String, offer.company.address.companyId: kotlin.Long, offer.company.companyProps.id: kotlin.Long, offer.company.companyProps.callbackUrl: kotlin.String, offer.company.companyProps.logoPath: kotlin.String, offer.company.companyProps.hostedPageCSSPath: kotlin.String, offer.company.companyProps.privacyPolicyUrl: kotlin.String, offer.company.companyProps.subscreasyApiKey: kotlin.String, offer.company.companyProps.subscreasySecureKey: kotlin.String, offer.company.companyProps.paymentGateway: kotlin.String, offer.company.companyProps.mobilePaymentGateway: kotlin.String, offer.company.companyProps.wirecardUserCode: kotlin.String, offer.company.companyProps.wirecardPin: kotlin.String, offer.company.companyProps.wirecardTurkcellServisId: kotlin.String, offer.company.companyProps.wirecardSuccessfulMessage: kotlin.String, offer.company.companyProps.wirecardErrorMessage: kotlin.String, offer.company.companyProps.paymentGatewayApiKey: kotlin.String, offer.company.companyProps.paymentGatewaySecurityKey: kotlin.String, offer.company.companyProps.payuMerchantKeyRenewals: kotlin.String, offer.company.companyProps.payuSecretKeyRenewals: kotlin.String, offer.company.companyProps.paytrMerchantId: kotlin.Int, offer.company.companyProps.mobilExpressMerchantKey: kotlin.String, offer.company.companyProps.mobilExpressApiPassword: kotlin.String, offer.company.companyProps.mobilExpressPosid: kotlin.Int, offer.company.companyProps.billingDate: kotlin.Int, offer.company.companyProps.billingThresholdDays: kotlin.Int, offer.company.companyProps.domainName: kotlin.String, offer.company.companyProps.contactEmail: kotlin.String, offer.company.companyProps.sendDailyReports: kotlin.String, offer.company.companyProps.notifyNewSubscription: kotlin.Boolean, offer.company.companyProps.notifyRenewal: kotlin.Boolean, offer.company.companyProps.notifySubscriptionCancellation: kotlin.Boolean, offer.company.companyProps.branding: kotlin.Boolean, offer.company.companyProps.billingInformationMandatory: kotlin.Boolean, offer.company.id: kotlin.Long, offer.company.name: kotlin.String, offer.company.siteName: kotlin.String, offer.id: kotlin.Long, offer.secureId: kotlin.String, offer.name: kotlin.String, offer.description: kotlin.String, offer.price: java.math.BigDecimal, offer.currency: kotlin.String, offer.multiplePurchase: kotlin.Boolean, offer.recurrenceCount: kotlin.Int, offer.trialPeriod: kotlin.Int, offer.productType: kotlin.String, offer.renewalType: kotlin.String, offer.disablePaymentForm: kotlin.Boolean, offer.createDate: java.time.LocalDateTime, offer.imagePath: kotlin.String, subscriber.billingAddress.id: kotlin.Long, subscriber.billingAddress.name: kotlin.String, subscriber.billingAddress.streetAddress: kotlin.String, subscriber.billingAddress.postalCode: kotlin.String, subscriber.billingAddress.city: kotlin.String, subscriber.billingAddress.stateProvince: kotlin.String, subscriber.billingAddress.country: kotlin.String, subscriber.billingAddress.companyId: kotlin.Long, subscriber.shippingAddress.id: kotlin.Long, subscriber.shippingAddress.name: kotlin.String, subscriber.shippingAddress.streetAddress: kotlin.String, subscriber.shippingAddress.postalCode: kotlin.String, subscriber.shippingAddress.city: kotlin.String, subscriber.shippingAddress.stateProvince: kotlin.String, subscriber.shippingAddress.country: kotlin.String, subscriber.shippingAddress.companyId: kotlin.Long, subscriber.company.address.id: kotlin.Long, subscriber.company.address.name: kotlin.String, subscriber.company.address.streetAddress: kotlin.String, subscriber.company.address.postalCode: kotlin.String, subscriber.company.address.city: kotlin.String, subscriber.company.address.stateProvince: kotlin.String, subscriber.company.address.country: kotlin.String, subscriber.company.address.companyId: kotlin.Long, subscriber.company.companyProps.id: kotlin.Long, subscriber.company.companyProps.callbackUrl: kotlin.String, subscriber.company.companyProps.logoPath: kotlin.String, subscriber.company.companyProps.hostedPageCSSPath: kotlin.String, subscriber.company.companyProps.privacyPolicyUrl: kotlin.String, subscriber.company.companyProps.subscreasyApiKey: kotlin.String, subscriber.company.companyProps.subscreasySecureKey: kotlin.String, subscriber.company.companyProps.paymentGateway: kotlin.String, subscriber.company.companyProps.mobilePaymentGateway: kotlin.String, subscriber.company.companyProps.wirecardUserCode: kotlin.String, subscriber.company.companyProps.wirecardPin: kotlin.String, subscriber.company.companyProps.wirecardTurkcellServisId: kotlin.String, subscriber.company.companyProps.wirecardSuccessfulMessage: kotlin.String, subscriber.company.companyProps.wirecardErrorMessage: kotlin.String, subscriber.company.companyProps.paymentGatewayApiKey: kotlin.String, subscriber.company.companyProps.paymentGatewaySecurityKey: kotlin.String, subscriber.company.companyProps.payuMerchantKeyRenewals: kotlin.String, subscriber.company.companyProps.payuSecretKeyRenewals: kotlin.String, subscriber.company.companyProps.paytrMerchantId: kotlin.Int, subscriber.company.companyProps.mobilExpressMerchantKey: kotlin.String, subscriber.company.companyProps.mobilExpressApiPassword: kotlin.String, subscriber.company.companyProps.mobilExpressPosid: kotlin.Int, subscriber.company.companyProps.billingDate: kotlin.Int, subscriber.company.companyProps.billingThresholdDays: kotlin.Int, subscriber.company.companyProps.domainName: kotlin.String, subscriber.company.companyProps.contactEmail: kotlin.String, subscriber.company.companyProps.sendDailyReports: kotlin.String, subscriber.company.companyProps.notifyNewSubscription: kotlin.Boolean, subscriber.company.companyProps.notifyRenewal: kotlin.Boolean, subscriber.company.companyProps.notifySubscriptionCancellation: kotlin.Boolean, subscriber.company.companyProps.branding: kotlin.Boolean, subscriber.company.companyProps.billingInformationMandatory: kotlin.Boolean, subscriber.company.id: kotlin.Long, subscriber.company.name: kotlin.String, subscriber.company.siteName: kotlin.String, subscriber.id: kotlin.Long, subscriber.secureId: kotlin.String, subscriber.merchantSubscriberId: kotlin.String, subscriber.email: kotlin.String, subscriber.name: kotlin.String, subscriber.surname: kotlin.String, subscriber.phoneNumber: kotlin.String, subscriber.createDate: java.time.LocalDateTime, subscriber.identificationNo: kotlin.String, subscriber.taxNumber: kotlin.String, subscriber.taxAdministration: kotlin.String, subscriber.worksFor: kotlin.String, paymentCard.cardHolderName: kotlin.String, paymentCard.cardNumber: kotlin.String, paymentCard.expireYear: kotlin.String, paymentCard.expireMonth: kotlin.String, paymentCard.cvc: kotlin.String, paymentCard.registerCard: kotlin.Int, paymentCard.cardAlias: kotlin.String, paymentCard.cardToken: kotlin.String, paymentCard.cardUserKey: kotlin.String, paymentCard.cardFamily: kotlin.String, subscriberFromDb.billingAddress.id: kotlin.Long, subscriberFromDb.billingAddress.name: kotlin.String, subscriberFromDb.billingAddress.streetAddress: kotlin.String, subscriberFromDb.billingAddress.postalCode: kotlin.String, subscriberFromDb.billingAddress.city: kotlin.String, subscriberFromDb.billingAddress.stateProvince: kotlin.String, subscriberFromDb.billingAddress.country: kotlin.String, subscriberFromDb.billingAddress.companyId: kotlin.Long, subscriberFromDb.shippingAddress.id: kotlin.Long, subscriberFromDb.shippingAddress.name: kotlin.String, subscriberFromDb.shippingAddress.streetAddress: kotlin.String, subscriberFromDb.shippingAddress.postalCode: kotlin.String, subscriberFromDb.shippingAddress.city: kotlin.String, subscriberFromDb.shippingAddress.stateProvince: kotlin.String, subscriberFromDb.shippingAddress.country: kotlin.String, subscriberFromDb.shippingAddress.companyId: kotlin.Long, subscriberFromDb.company.address.id: kotlin.Long, subscriberFromDb.company.address.name: kotlin.String, subscriberFromDb.company.address.streetAddress: kotlin.String, subscriberFromDb.company.address.postalCode: kotlin.String, subscriberFromDb.company.address.city: kotlin.String, subscriberFromDb.company.address.stateProvince: kotlin.String, subscriberFromDb.company.address.country: kotlin.String, subscriberFromDb.company.address.companyId: kotlin.Long, subscriberFromDb.company.companyProps.id: kotlin.Long, subscriberFromDb.company.companyProps.callbackUrl: kotlin.String, subscriberFromDb.company.companyProps.logoPath: kotlin.String, subscriberFromDb.company.companyProps.hostedPageCSSPath: kotlin.String, subscriberFromDb.company.companyProps.privacyPolicyUrl: kotlin.String, subscriberFromDb.company.companyProps.subscreasyApiKey: kotlin.String, subscriberFromDb.company.companyProps.subscreasySecureKey: kotlin.String, subscriberFromDb.company.companyProps.paymentGateway: kotlin.String, subscriberFromDb.company.companyProps.mobilePaymentGateway: kotlin.String, subscriberFromDb.company.companyProps.wirecardUserCode: kotlin.String, subscriberFromDb.company.companyProps.wirecardPin: kotlin.String, subscriberFromDb.company.companyProps.wirecardTurkcellServisId: kotlin.String, subscriberFromDb.company.companyProps.wirecardSuccessfulMessage: kotlin.String, subscriberFromDb.company.companyProps.wirecardErrorMessage: kotlin.String, subscriberFromDb.company.companyProps.paymentGatewayApiKey: kotlin.String, subscriberFromDb.company.companyProps.paymentGatewaySecurityKey: kotlin.String, subscriberFromDb.company.companyProps.payuMerchantKeyRenewals: kotlin.String, subscriberFromDb.company.companyProps.payuSecretKeyRenewals: kotlin.String, subscriberFromDb.company.companyProps.paytrMerchantId: kotlin.Int, subscriberFromDb.company.companyProps.mobilExpressMerchantKey: kotlin.String, subscriberFromDb.company.companyProps.mobilExpressApiPassword: kotlin.String, subscriberFromDb.company.companyProps.mobilExpressPosid: kotlin.Int, subscriberFromDb.company.companyProps.billingDate: kotlin.Int, subscriberFromDb.company.companyProps.billingThresholdDays: kotlin.Int, subscriberFromDb.company.companyProps.domainName: kotlin.String, subscriberFromDb.company.companyProps.contactEmail: kotlin.String, subscriberFromDb.company.companyProps.sendDailyReports: kotlin.String, subscriberFromDb.company.companyProps.notifyNewSubscription: kotlin.Boolean, subscriberFromDb.company.companyProps.notifyRenewal: kotlin.Boolean, subscriberFromDb.company.companyProps.notifySubscriptionCancellation: kotlin.Boolean, subscriberFromDb.company.companyProps.branding: kotlin.Boolean, subscriberFromDb.company.companyProps.billingInformationMandatory: kotlin.Boolean, subscriberFromDb.company.id: kotlin.Long, subscriberFromDb.company.name: kotlin.String, subscriberFromDb.company.siteName: kotlin.String, subscriberFromDb.id: kotlin.Long, subscriberFromDb.secureId: kotlin.String, subscriberFromDb.merchantSubscriberId: kotlin.String, subscriberFromDb.email: kotlin.String, subscriberFromDb.name: kotlin.String, subscriberFromDb.surname: kotlin.String, subscriberFromDb.phoneNumber: kotlin.String, subscriberFromDb.createDate: java.time.LocalDateTime, subscriberFromDb.identificationNo: kotlin.String, subscriberFromDb.taxNumber: kotlin.String, subscriberFromDb.taxAdministration: kotlin.String, subscriberFromDb.worksFor: kotlin.String, couponCode: kotlin.String, callbackUrl: kotlin.String, price: java.math.BigDecimal, companySiteName: kotlin.String, privacyPolicyUrl: kotlin.Boolean, paymentType: kotlin.String, editable: kotlin.Boolean, productType: kotlin.String) : kotlin.String {
        val localVariableBody: kotlin.Any? = null
        val localVariableQuery: MultiValueMap = mapOf("offer.recurrence.id" to listOf("$offer.recurrence.id"), "offer.recurrence.recurrenceType" to listOf("$offer.recurrence.recurrenceType"), "offer.recurrence.length" to listOf("$offer.recurrence.length"), "offer.company.address.id" to listOf("$offer.company.address.id"), "offer.company.address.name" to listOf("$offer.company.address.name"), "offer.company.address.streetAddress" to listOf("$offer.company.address.streetAddress"), "offer.company.address.postalCode" to listOf("$offer.company.address.postalCode"), "offer.company.address.city" to listOf("$offer.company.address.city"), "offer.company.address.stateProvince" to listOf("$offer.company.address.stateProvince"), "offer.company.address.country" to listOf("$offer.company.address.country"), "offer.company.address.companyId" to listOf("$offer.company.address.companyId"), "offer.company.companyProps.id" to listOf("$offer.company.companyProps.id"), "offer.company.companyProps.callbackUrl" to listOf("$offer.company.companyProps.callbackUrl"), "offer.company.companyProps.logoPath" to listOf("$offer.company.companyProps.logoPath"), "offer.company.companyProps.hostedPageCSSPath" to listOf("$offer.company.companyProps.hostedPageCSSPath"), "offer.company.companyProps.privacyPolicyUrl" to listOf("$offer.company.companyProps.privacyPolicyUrl"), "offer.company.companyProps.subscreasyApiKey" to listOf("$offer.company.companyProps.subscreasyApiKey"), "offer.company.companyProps.subscreasySecureKey" to listOf("$offer.company.companyProps.subscreasySecureKey"), "offer.company.companyProps.paymentGateway" to listOf("$offer.company.companyProps.paymentGateway"), "offer.company.companyProps.mobilePaymentGateway" to listOf("$offer.company.companyProps.mobilePaymentGateway"), "offer.company.companyProps.wirecardUserCode" to listOf("$offer.company.companyProps.wirecardUserCode"), "offer.company.companyProps.wirecardPin" to listOf("$offer.company.companyProps.wirecardPin"), "offer.company.companyProps.wirecardTurkcellServisId" to listOf("$offer.company.companyProps.wirecardTurkcellServisId"), "offer.company.companyProps.wirecardSuccessfulMessage" to listOf("$offer.company.companyProps.wirecardSuccessfulMessage"), "offer.company.companyProps.wirecardErrorMessage" to listOf("$offer.company.companyProps.wirecardErrorMessage"), "offer.company.companyProps.paymentGatewayApiKey" to listOf("$offer.company.companyProps.paymentGatewayApiKey"), "offer.company.companyProps.paymentGatewaySecurityKey" to listOf("$offer.company.companyProps.paymentGatewaySecurityKey"), "offer.company.companyProps.payuMerchantKeyRenewals" to listOf("$offer.company.companyProps.payuMerchantKeyRenewals"), "offer.company.companyProps.payuSecretKeyRenewals" to listOf("$offer.company.companyProps.payuSecretKeyRenewals"), "offer.company.companyProps.paytrMerchantId" to listOf("$offer.company.companyProps.paytrMerchantId"), "offer.company.companyProps.mobilExpressMerchantKey" to listOf("$offer.company.companyProps.mobilExpressMerchantKey"), "offer.company.companyProps.mobilExpressApiPassword" to listOf("$offer.company.companyProps.mobilExpressApiPassword"), "offer.company.companyProps.mobilExpressPosid" to listOf("$offer.company.companyProps.mobilExpressPosid"), "offer.company.companyProps.billingDate" to listOf("$offer.company.companyProps.billingDate"), "offer.company.companyProps.billingThresholdDays" to listOf("$offer.company.companyProps.billingThresholdDays"), "offer.company.companyProps.domainName" to listOf("$offer.company.companyProps.domainName"), "offer.company.companyProps.contactEmail" to listOf("$offer.company.companyProps.contactEmail"), "offer.company.companyProps.sendDailyReports" to listOf("$offer.company.companyProps.sendDailyReports"), "offer.company.companyProps.notifyNewSubscription" to listOf("$offer.company.companyProps.notifyNewSubscription"), "offer.company.companyProps.notifyRenewal" to listOf("$offer.company.companyProps.notifyRenewal"), "offer.company.companyProps.notifySubscriptionCancellation" to listOf("$offer.company.companyProps.notifySubscriptionCancellation"), "offer.company.companyProps.branding" to listOf("$offer.company.companyProps.branding"), "offer.company.companyProps.billingInformationMandatory" to listOf("$offer.company.companyProps.billingInformationMandatory"), "offer.company.id" to listOf("$offer.company.id"), "offer.company.name" to listOf("$offer.company.name"), "offer.company.siteName" to listOf("$offer.company.siteName"), "offer.id" to listOf("$offer.id"), "offer.secureId" to listOf("$offer.secureId"), "offer.name" to listOf("$offer.name"), "offer.description" to listOf("$offer.description"), "offer.price" to listOf("$offer.price"), "offer.currency" to listOf("$offer.currency"), "offer.multiplePurchase" to listOf("$offer.multiplePurchase"), "offer.recurrenceCount" to listOf("$offer.recurrenceCount"), "offer.trialPeriod" to listOf("$offer.trialPeriod"), "offer.productType" to listOf("$offer.productType"), "offer.renewalType" to listOf("$offer.renewalType"), "offer.disablePaymentForm" to listOf("$offer.disablePaymentForm"), "offer.createDate" to listOf("$offer.createDate"), "offer.imagePath" to listOf("$offer.imagePath"), "subscriber.billingAddress.id" to listOf("$subscriber.billingAddress.id"), "subscriber.billingAddress.name" to listOf("$subscriber.billingAddress.name"), "subscriber.billingAddress.streetAddress" to listOf("$subscriber.billingAddress.streetAddress"), "subscriber.billingAddress.postalCode" to listOf("$subscriber.billingAddress.postalCode"), "subscriber.billingAddress.city" to listOf("$subscriber.billingAddress.city"), "subscriber.billingAddress.stateProvince" to listOf("$subscriber.billingAddress.stateProvince"), "subscriber.billingAddress.country" to listOf("$subscriber.billingAddress.country"), "subscriber.billingAddress.companyId" to listOf("$subscriber.billingAddress.companyId"), "subscriber.shippingAddress.id" to listOf("$subscriber.shippingAddress.id"), "subscriber.shippingAddress.name" to listOf("$subscriber.shippingAddress.name"), "subscriber.shippingAddress.streetAddress" to listOf("$subscriber.shippingAddress.streetAddress"), "subscriber.shippingAddress.postalCode" to listOf("$subscriber.shippingAddress.postalCode"), "subscriber.shippingAddress.city" to listOf("$subscriber.shippingAddress.city"), "subscriber.shippingAddress.stateProvince" to listOf("$subscriber.shippingAddress.stateProvince"), "subscriber.shippingAddress.country" to listOf("$subscriber.shippingAddress.country"), "subscriber.shippingAddress.companyId" to listOf("$subscriber.shippingAddress.companyId"), "subscriber.company.address.id" to listOf("$subscriber.company.address.id"), "subscriber.company.address.name" to listOf("$subscriber.company.address.name"), "subscriber.company.address.streetAddress" to listOf("$subscriber.company.address.streetAddress"), "subscriber.company.address.postalCode" to listOf("$subscriber.company.address.postalCode"), "subscriber.company.address.city" to listOf("$subscriber.company.address.city"), "subscriber.company.address.stateProvince" to listOf("$subscriber.company.address.stateProvince"), "subscriber.company.address.country" to listOf("$subscriber.company.address.country"), "subscriber.company.address.companyId" to listOf("$subscriber.company.address.companyId"), "subscriber.company.companyProps.id" to listOf("$subscriber.company.companyProps.id"), "subscriber.company.companyProps.callbackUrl" to listOf("$subscriber.company.companyProps.callbackUrl"), "subscriber.company.companyProps.logoPath" to listOf("$subscriber.company.companyProps.logoPath"), "subscriber.company.companyProps.hostedPageCSSPath" to listOf("$subscriber.company.companyProps.hostedPageCSSPath"), "subscriber.company.companyProps.privacyPolicyUrl" to listOf("$subscriber.company.companyProps.privacyPolicyUrl"), "subscriber.company.companyProps.subscreasyApiKey" to listOf("$subscriber.company.companyProps.subscreasyApiKey"), "subscriber.company.companyProps.subscreasySecureKey" to listOf("$subscriber.company.companyProps.subscreasySecureKey"), "subscriber.company.companyProps.paymentGateway" to listOf("$subscriber.company.companyProps.paymentGateway"), "subscriber.company.companyProps.mobilePaymentGateway" to listOf("$subscriber.company.companyProps.mobilePaymentGateway"), "subscriber.company.companyProps.wirecardUserCode" to listOf("$subscriber.company.companyProps.wirecardUserCode"), "subscriber.company.companyProps.wirecardPin" to listOf("$subscriber.company.companyProps.wirecardPin"), "subscriber.company.companyProps.wirecardTurkcellServisId" to listOf("$subscriber.company.companyProps.wirecardTurkcellServisId"), "subscriber.company.companyProps.wirecardSuccessfulMessage" to listOf("$subscriber.company.companyProps.wirecardSuccessfulMessage"), "subscriber.company.companyProps.wirecardErrorMessage" to listOf("$subscriber.company.companyProps.wirecardErrorMessage"), "subscriber.company.companyProps.paymentGatewayApiKey" to listOf("$subscriber.company.companyProps.paymentGatewayApiKey"), "subscriber.company.companyProps.paymentGatewaySecurityKey" to listOf("$subscriber.company.companyProps.paymentGatewaySecurityKey"), "subscriber.company.companyProps.payuMerchantKeyRenewals" to listOf("$subscriber.company.companyProps.payuMerchantKeyRenewals"), "subscriber.company.companyProps.payuSecretKeyRenewals" to listOf("$subscriber.company.companyProps.payuSecretKeyRenewals"), "subscriber.company.companyProps.paytrMerchantId" to listOf("$subscriber.company.companyProps.paytrMerchantId"), "subscriber.company.companyProps.mobilExpressMerchantKey" to listOf("$subscriber.company.companyProps.mobilExpressMerchantKey"), "subscriber.company.companyProps.mobilExpressApiPassword" to listOf("$subscriber.company.companyProps.mobilExpressApiPassword"), "subscriber.company.companyProps.mobilExpressPosid" to listOf("$subscriber.company.companyProps.mobilExpressPosid"), "subscriber.company.companyProps.billingDate" to listOf("$subscriber.company.companyProps.billingDate"), "subscriber.company.companyProps.billingThresholdDays" to listOf("$subscriber.company.companyProps.billingThresholdDays"), "subscriber.company.companyProps.domainName" to listOf("$subscriber.company.companyProps.domainName"), "subscriber.company.companyProps.contactEmail" to listOf("$subscriber.company.companyProps.contactEmail"), "subscriber.company.companyProps.sendDailyReports" to listOf("$subscriber.company.companyProps.sendDailyReports"), "subscriber.company.companyProps.notifyNewSubscription" to listOf("$subscriber.company.companyProps.notifyNewSubscription"), "subscriber.company.companyProps.notifyRenewal" to listOf("$subscriber.company.companyProps.notifyRenewal"), "subscriber.company.companyProps.notifySubscriptionCancellation" to listOf("$subscriber.company.companyProps.notifySubscriptionCancellation"), "subscriber.company.companyProps.branding" to listOf("$subscriber.company.companyProps.branding"), "subscriber.company.companyProps.billingInformationMandatory" to listOf("$subscriber.company.companyProps.billingInformationMandatory"), "subscriber.company.id" to listOf("$subscriber.company.id"), "subscriber.company.name" to listOf("$subscriber.company.name"), "subscriber.company.siteName" to listOf("$subscriber.company.siteName"), "subscriber.id" to listOf("$subscriber.id"), "subscriber.secureId" to listOf("$subscriber.secureId"), "subscriber.merchantSubscriberId" to listOf("$subscriber.merchantSubscriberId"), "subscriber.email" to listOf("$subscriber.email"), "subscriber.name" to listOf("$subscriber.name"), "subscriber.surname" to listOf("$subscriber.surname"), "subscriber.phoneNumber" to listOf("$subscriber.phoneNumber"), "subscriber.createDate" to listOf("$subscriber.createDate"), "subscriber.identificationNo" to listOf("$subscriber.identificationNo"), "subscriber.taxNumber" to listOf("$subscriber.taxNumber"), "subscriber.taxAdministration" to listOf("$subscriber.taxAdministration"), "subscriber.worksFor" to listOf("$subscriber.worksFor"), "paymentCard.cardHolderName" to listOf("$paymentCard.cardHolderName"), "paymentCard.cardNumber" to listOf("$paymentCard.cardNumber"), "paymentCard.expireYear" to listOf("$paymentCard.expireYear"), "paymentCard.expireMonth" to listOf("$paymentCard.expireMonth"), "paymentCard.cvc" to listOf("$paymentCard.cvc"), "paymentCard.registerCard" to listOf("$paymentCard.registerCard"), "paymentCard.cardAlias" to listOf("$paymentCard.cardAlias"), "paymentCard.cardToken" to listOf("$paymentCard.cardToken"), "paymentCard.cardUserKey" to listOf("$paymentCard.cardUserKey"), "paymentCard.cardFamily" to listOf("$paymentCard.cardFamily"), "subscriberFromDb.billingAddress.id" to listOf("$subscriberFromDb.billingAddress.id"), "subscriberFromDb.billingAddress.name" to listOf("$subscriberFromDb.billingAddress.name"), "subscriberFromDb.billingAddress.streetAddress" to listOf("$subscriberFromDb.billingAddress.streetAddress"), "subscriberFromDb.billingAddress.postalCode" to listOf("$subscriberFromDb.billingAddress.postalCode"), "subscriberFromDb.billingAddress.city" to listOf("$subscriberFromDb.billingAddress.city"), "subscriberFromDb.billingAddress.stateProvince" to listOf("$subscriberFromDb.billingAddress.stateProvince"), "subscriberFromDb.billingAddress.country" to listOf("$subscriberFromDb.billingAddress.country"), "subscriberFromDb.billingAddress.companyId" to listOf("$subscriberFromDb.billingAddress.companyId"), "subscriberFromDb.shippingAddress.id" to listOf("$subscriberFromDb.shippingAddress.id"), "subscriberFromDb.shippingAddress.name" to listOf("$subscriberFromDb.shippingAddress.name"), "subscriberFromDb.shippingAddress.streetAddress" to listOf("$subscriberFromDb.shippingAddress.streetAddress"), "subscriberFromDb.shippingAddress.postalCode" to listOf("$subscriberFromDb.shippingAddress.postalCode"), "subscriberFromDb.shippingAddress.city" to listOf("$subscriberFromDb.shippingAddress.city"), "subscriberFromDb.shippingAddress.stateProvince" to listOf("$subscriberFromDb.shippingAddress.stateProvince"), "subscriberFromDb.shippingAddress.country" to listOf("$subscriberFromDb.shippingAddress.country"), "subscriberFromDb.shippingAddress.companyId" to listOf("$subscriberFromDb.shippingAddress.companyId"), "subscriberFromDb.company.address.id" to listOf("$subscriberFromDb.company.address.id"), "subscriberFromDb.company.address.name" to listOf("$subscriberFromDb.company.address.name"), "subscriberFromDb.company.address.streetAddress" to listOf("$subscriberFromDb.company.address.streetAddress"), "subscriberFromDb.company.address.postalCode" to listOf("$subscriberFromDb.company.address.postalCode"), "subscriberFromDb.company.address.city" to listOf("$subscriberFromDb.company.address.city"), "subscriberFromDb.company.address.stateProvince" to listOf("$subscriberFromDb.company.address.stateProvince"), "subscriberFromDb.company.address.country" to listOf("$subscriberFromDb.company.address.country"), "subscriberFromDb.company.address.companyId" to listOf("$subscriberFromDb.company.address.companyId"), "subscriberFromDb.company.companyProps.id" to listOf("$subscriberFromDb.company.companyProps.id"), "subscriberFromDb.company.companyProps.callbackUrl" to listOf("$subscriberFromDb.company.companyProps.callbackUrl"), "subscriberFromDb.company.companyProps.logoPath" to listOf("$subscriberFromDb.company.companyProps.logoPath"), "subscriberFromDb.company.companyProps.hostedPageCSSPath" to listOf("$subscriberFromDb.company.companyProps.hostedPageCSSPath"), "subscriberFromDb.company.companyProps.privacyPolicyUrl" to listOf("$subscriberFromDb.company.companyProps.privacyPolicyUrl"), "subscriberFromDb.company.companyProps.subscreasyApiKey" to listOf("$subscriberFromDb.company.companyProps.subscreasyApiKey"), "subscriberFromDb.company.companyProps.subscreasySecureKey" to listOf("$subscriberFromDb.company.companyProps.subscreasySecureKey"), "subscriberFromDb.company.companyProps.paymentGateway" to listOf("$subscriberFromDb.company.companyProps.paymentGateway"), "subscriberFromDb.company.companyProps.mobilePaymentGateway" to listOf("$subscriberFromDb.company.companyProps.mobilePaymentGateway"), "subscriberFromDb.company.companyProps.wirecardUserCode" to listOf("$subscriberFromDb.company.companyProps.wirecardUserCode"), "subscriberFromDb.company.companyProps.wirecardPin" to listOf("$subscriberFromDb.company.companyProps.wirecardPin"), "subscriberFromDb.company.companyProps.wirecardTurkcellServisId" to listOf("$subscriberFromDb.company.companyProps.wirecardTurkcellServisId"), "subscriberFromDb.company.companyProps.wirecardSuccessfulMessage" to listOf("$subscriberFromDb.company.companyProps.wirecardSuccessfulMessage"), "subscriberFromDb.company.companyProps.wirecardErrorMessage" to listOf("$subscriberFromDb.company.companyProps.wirecardErrorMessage"), "subscriberFromDb.company.companyProps.paymentGatewayApiKey" to listOf("$subscriberFromDb.company.companyProps.paymentGatewayApiKey"), "subscriberFromDb.company.companyProps.paymentGatewaySecurityKey" to listOf("$subscriberFromDb.company.companyProps.paymentGatewaySecurityKey"), "subscriberFromDb.company.companyProps.payuMerchantKeyRenewals" to listOf("$subscriberFromDb.company.companyProps.payuMerchantKeyRenewals"), "subscriberFromDb.company.companyProps.payuSecretKeyRenewals" to listOf("$subscriberFromDb.company.companyProps.payuSecretKeyRenewals"), "subscriberFromDb.company.companyProps.paytrMerchantId" to listOf("$subscriberFromDb.company.companyProps.paytrMerchantId"), "subscriberFromDb.company.companyProps.mobilExpressMerchantKey" to listOf("$subscriberFromDb.company.companyProps.mobilExpressMerchantKey"), "subscriberFromDb.company.companyProps.mobilExpressApiPassword" to listOf("$subscriberFromDb.company.companyProps.mobilExpressApiPassword"), "subscriberFromDb.company.companyProps.mobilExpressPosid" to listOf("$subscriberFromDb.company.companyProps.mobilExpressPosid"), "subscriberFromDb.company.companyProps.billingDate" to listOf("$subscriberFromDb.company.companyProps.billingDate"), "subscriberFromDb.company.companyProps.billingThresholdDays" to listOf("$subscriberFromDb.company.companyProps.billingThresholdDays"), "subscriberFromDb.company.companyProps.domainName" to listOf("$subscriberFromDb.company.companyProps.domainName"), "subscriberFromDb.company.companyProps.contactEmail" to listOf("$subscriberFromDb.company.companyProps.contactEmail"), "subscriberFromDb.company.companyProps.sendDailyReports" to listOf("$subscriberFromDb.company.companyProps.sendDailyReports"), "subscriberFromDb.company.companyProps.notifyNewSubscription" to listOf("$subscriberFromDb.company.companyProps.notifyNewSubscription"), "subscriberFromDb.company.companyProps.notifyRenewal" to listOf("$subscriberFromDb.company.companyProps.notifyRenewal"), "subscriberFromDb.company.companyProps.notifySubscriptionCancellation" to listOf("$subscriberFromDb.company.companyProps.notifySubscriptionCancellation"), "subscriberFromDb.company.companyProps.branding" to listOf("$subscriberFromDb.company.companyProps.branding"), "subscriberFromDb.company.companyProps.billingInformationMandatory" to listOf("$subscriberFromDb.company.companyProps.billingInformationMandatory"), "subscriberFromDb.company.id" to listOf("$subscriberFromDb.company.id"), "subscriberFromDb.company.name" to listOf("$subscriberFromDb.company.name"), "subscriberFromDb.company.siteName" to listOf("$subscriberFromDb.company.siteName"), "subscriberFromDb.id" to listOf("$subscriberFromDb.id"), "subscriberFromDb.secureId" to listOf("$subscriberFromDb.secureId"), "subscriberFromDb.merchantSubscriberId" to listOf("$subscriberFromDb.merchantSubscriberId"), "subscriberFromDb.email" to listOf("$subscriberFromDb.email"), "subscriberFromDb.name" to listOf("$subscriberFromDb.name"), "subscriberFromDb.surname" to listOf("$subscriberFromDb.surname"), "subscriberFromDb.phoneNumber" to listOf("$subscriberFromDb.phoneNumber"), "subscriberFromDb.createDate" to listOf("$subscriberFromDb.createDate"), "subscriberFromDb.identificationNo" to listOf("$subscriberFromDb.identificationNo"), "subscriberFromDb.taxNumber" to listOf("$subscriberFromDb.taxNumber"), "subscriberFromDb.taxAdministration" to listOf("$subscriberFromDb.taxAdministration"), "subscriberFromDb.worksFor" to listOf("$subscriberFromDb.worksFor"), "couponCode" to listOf("$couponCode"), "callbackUrl" to listOf("$callbackUrl"), "price" to listOf("$price"), "companySiteName" to listOf("$companySiteName"), "privacyPolicyUrl" to listOf("$privacyPolicyUrl"), "paymentType" to listOf("$paymentType"), "editable" to listOf("$editable"), "productType" to listOf("$productType"))
        val localVariableHeaders: kotlin.collections.Map<kotlin.String,kotlin.String> = mapOf()
        val localVariableConfig = RequestConfig(
            RequestMethod.POST,
            "/na/subscription/start/4ds",
            query = localVariableQuery,
            headers = localVariableHeaders
        )
        val response = request<kotlin.String>(
            localVariableConfig,
            localVariableBody
        )

        return when (response.responseType) {
            ResponseType.Success -> (response as Success<*>).data as kotlin.String
            ResponseType.Informational -> TODO()
            ResponseType.Redirection -> TODO()
            ResponseType.ClientError -> throw ClientException((response as ClientError<*>).body as? String ?: "Client error")
            ResponseType.ServerError -> throw ServerException((response as ServerError<*>).message ?: "Server error")
            else -> throw kotlin.IllegalStateException("Undefined ResponseType.")
        }
    }

}
